"""
Level 1 	
	  	
This level is about unscrambling words.

Find the original (unscrambled) words, which were randomly taken from a wordlist.<--
Send a comma separated list of the original words, in the same order as in the list below.


You have 30 seconds time to send the solution.
	
	
List of scrambled words:    	
kisnck
	
hnteor
	
ebatdaas
	
hsatni
	
acrnfosi
	
siirpt
	
iaelru
	
valnlia
	
a1admna
	
riorrm

"""

"""
MY ALGORITHM
============

READ THE FIRST WORD FROM scrambled_list

        PUT IT INTO A LIST OF INDIVIDUAL LETTERS

        PUT THAT LIST CONTENT INTO ORDER WITH sorted()

    READ EACH WORD (ONE AFTER ANOTHER) FROM wordlist.txt

        PUT EACH WORD FROM wordlists.txt INTO A LIST OF INDIVIDUAL LETTERS

        PUT EACH WORD FROM wordlists.txt INTO ORDER WITH sorted()

    COMPARE THE WORD FROM scrambled_list WITH ALL WORDS IN wordlists.txt (BOTH AS LISTS & BOTH SORTED)

        IF THEY MATCH PRINT THE *ORIGINAL UNSORTED WORD* FROM wordlist.txt

        CONTINUE WITH THE NEXT WORD FROM scrambled_list

"""

# SOLUTION to HackThisSite's Programming Chall: "Unscramble the words"
# (https://www.hackthissite.org/missions/prog/1/)
# -------------------------------------------------------------------

# I have to open this file in Notepad from within the root folder on my HDD to
# copy & paste the chall's strings to it, then save it, then run my script:

# Opens, reads & closes the "strings.txt" file, and gets rid of the '\n' characters.

with open('strings.txt', 'r') as strings:
    scrambled_list = strings.read().splitlines()

# Opens, reads & closes the "wordlist.txt" file, and gets rid of the '\n' characters.

with open('wordlist.txt', 'r') as wlist:
    wordlist = wlist.read().splitlines()

# Iterates through scrambled_list (the strings.txt file content), and converts each word into
# a LIST of characters per word.

for i in scrambled_list:
    scr_word = list(i)

    # Iterates through wordlist (the wordlist.txt file content), and converts each word into
    # a LIST of characters per word.

    for i in wordlist:
        word = list(i)

        # Using sorted(LIST_NAME) rather than sort() alphabetically sorts the lists ONLY
        # while they are in the function and doesn't touch/change the original list...
        # If the (temporarily) sorted 'word-lists' match up then print the original word from
        # WORD (which is the word from wordlist.txt).

        if sorted(scr_word) == sorted(word):
           res = ''.join(word) + ", "
           print(res, end = '')
